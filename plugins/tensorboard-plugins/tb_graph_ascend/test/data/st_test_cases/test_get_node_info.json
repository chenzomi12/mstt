[
    {
        "case_id": "1",
        "description": "测试获取匹配节点信息",
        "input": "/data/plugin/graph_ascend/getNodeInfo?nodeInfo={\"nodeType\":\"NPU\",\"nodeName\":\"Module.layer2.1.BasicBlock.forward.0\"}&metaData={\"tag\":\"mock_compare_resnet_data\",\"microStep\":-1,\"run\":\"st_test_cases\"}",
        "expected": {
            "success": true,
            "data": {
                "npu": {
                    "id": "Module.layer2.1.BasicBlock.forward.0",
                    "node_type": 0,
                    "output_data": {
                        "Module.layer2.1.BasicBlock.forward.0.output.0": {
                            "type": "torch.Tensor",
                            "dtype": "torch.float32",
                            "shape": "[10, 128, 8, 8]",
                            "Max": "7.306092",
                            "Min": "0.0",
                            "Mean": "0.830152",
                            "Norm": "372.837189",
                            "data_name": "-1",
                            "md5": "00000000",
                            "Max diff": "0.0",
                            "Min diff": "0.0",
                            "Mean diff": "0.0",
                            "L2norm diff": "0.0",
                            "MaxRelativeErr": "0.0%",
                            "MinRelativeErr": "N/A, \u7531\u4e8eMin\u5c0f\u4e8e1e-06, \u5efa\u8bae\u4e0d\u53c2\u8003\u6b64\u76f8\u5bf9\u8bef\u5dee\uff0c\u8bf7\u53c2\u8003\u7edd\u5bf9\u8bef\u5dee",
                            "MeanRelativeErr": "0.0%",
                            "NormRelativeErr": "0.0%"
                        }
                    },
                    "input_data": {
                        "Module.layer2.1.BasicBlock.forward.0.input.0": {
                            "type": "torch.Tensor",
                            "dtype": "torch.float32",
                            "shape": "[10, 128, 8, 8]",
                            "Max": "6.058126",
                            "Min": "0.0",
                            "Mean": "0.569005",
                            "Norm": "288.38382",
                            "data_name": "-1",
                            "md5": "00000000",
                            "Max diff": "0.0",
                            "Min diff": "0.0",
                            "Mean diff": "0.0",
                            "L2norm diff": "0.0",
                            "MaxRelativeErr": "0.0%",
                            "MinRelativeErr": "N/A, \u7531\u4e8eMin\u5c0f\u4e8e1e-06, \u5efa\u8bae\u4e0d\u53c2\u8003\u6b64\u76f8\u5bf9\u8bef\u5dee\uff0c\u8bf7\u53c2\u8003\u7edd\u5bf9\u8bef\u5dee",
                            "MeanRelativeErr": "0.0%",
                            "NormRelativeErr": "0.0%"
                        }
                    },
                    "upnode": "Module.layer2.Sequential.forward.0",
                    "subnodes": [
                        "Module.layer2.1.conv1.Conv2d.forward.0",
                        "Module.layer2.1.bn1.BatchNorm2d.forward.0",
                        "Module.layer2.1.relu.ReLU.forward.0",
                        "Module.layer2.1.conv2.Conv2d.forward.0",
                        "Module.layer2.1.bn2.BatchNorm2d.forward.0",
                        "Module.layer2.1.relu.ReLU.forward.1"
                    ],
                    "matched_node_link": [
                        "DefaultModel",
                        "Module.layer2.Sequential.forward.0",
                        "Module.layer2.1.BasicBlock.forward.0"
                    ],
                    "suggestions": {},
                    "stack_info": [
                        "File /home/louyujing/miniconda3/lib/python3.9/site-packages/torch/nn/modules/container.py, line 215, in forward, \n input = module(input)",
                        "File /home/louyujing/miniconda3/lib/python3.9/site-packages/torch/nn/modules/module.py, line 1568, in _call_impl, \n result = forward_call(*args, **kwargs)",
                        "File /home/louyujing/miniconda3/lib/python3.9/site-packages/torch/nn/modules/module.py, line 1518, in _wrapped_call_impl, \n return self._call_impl(*args, **kwargs)",
                        "File /home/louyujing/miniconda3/lib/python3.9/site-packages/torchvision/models/resnet.py, line 274, in _forward_impl, \n x = self.layer2(x)",
                        "File /home/louyujing/miniconda3/lib/python3.9/site-packages/torchvision/models/resnet.py, line 285, in forward, \n return self._forward_impl(x)",
                        "File /home/louyujing/miniconda3/lib/python3.9/site-packages/torch/nn/modules/module.py, line 1527, in _call_impl, \n return forward_call(*args, **kwargs)",
                        "File /home/louyujing/miniconda3/lib/python3.9/site-packages/torch/nn/modules/module.py, line 1518, in _wrapped_call_impl, \n return self._call_impl(*args, **kwargs)",
                        "File /home/louyujing/visualization/resnet18.py, line 40, in <module>, \n outputs = model(inputs)"
                    ],
                    "data": {
                        "precision_index": 0
                    }
                },
                "bench": {
                    "id": "Module.layer2.1.BasicBlock.forward.0",
                    "node_type": 0,
                    "output_data": {
                        "Module.layer2.1.BasicBlock.forward.0.output.0": {
                            "type": "torch.Tensor",
                            "dtype": "torch.float32",
                            "shape": "[10, 128, 8, 8]",
                            "Max": "7.306092",
                            "Min": "0.0",
                            "Mean": "0.830152",
                            "Norm": "372.837189",
                            "data_name": "-1",
                            "md5": "00000000"
                        }
                    },
                    "input_data": {
                        "Module.layer2.1.BasicBlock.forward.0.input.0": {
                            "type": "torch.Tensor",
                            "dtype": "torch.float32",
                            "shape": "[10, 128, 8, 8]",
                            "Max": "6.058126",
                            "Min": "0.0",
                            "Mean": "0.569005",
                            "Norm": "288.38382",
                            "data_name": "-1",
                            "md5": "00000000"
                        }
                    },
                    "upnode": "Module.layer2.Sequential.forward.0",
                    "subnodes": [
                        "Module.layer2.1.conv1.Conv2d.forward.0",
                        "Module.layer2.1.bn1.BatchNorm2d.forward.0",
                        "Module.layer2.1.relu.ReLU.forward.0",
                        "Module.layer2.1.conv2.Conv2d.forward.0",
                        "Module.layer2.1.bn2.BatchNorm2d.forward.0",
                        "Module.layer2.1.relu.ReLU.forward.1"
                    ],
                    "matched_node_link": [
                        "DefaultModel",
                        "Module.layer2.Sequential.forward.0",
                        "Module.layer2.1.BasicBlock.forward.0"
                    ],
                    "suggestions": {},
                    "stack_info": [
                        "File /home/louyujing/miniconda3/lib/python3.9/site-packages/torch/nn/modules/container.py, line 215, in forward, \n input = module(input)",
                        "File /home/louyujing/miniconda3/lib/python3.9/site-packages/torch/nn/modules/module.py, line 1568, in _call_impl, \n result = forward_call(*args, **kwargs)",
                        "File /home/louyujing/miniconda3/lib/python3.9/site-packages/torch/nn/modules/module.py, line 1518, in _wrapped_call_impl, \n return self._call_impl(*args, **kwargs)",
                        "File /home/louyujing/miniconda3/lib/python3.9/site-packages/torchvision/models/resnet.py, line 274, in _forward_impl, \n x = self.layer2(x)",
                        "File /home/louyujing/miniconda3/lib/python3.9/site-packages/torchvision/models/resnet.py, line 285, in forward, \n return self._forward_impl(x)",
                        "File /home/louyujing/miniconda3/lib/python3.9/site-packages/torch/nn/modules/module.py, line 1527, in _call_impl, \n return forward_call(*args, **kwargs)",
                        "File /home/louyujing/miniconda3/lib/python3.9/site-packages/torch/nn/modules/module.py, line 1518, in _wrapped_call_impl, \n return self._call_impl(*args, **kwargs)",
                        "File /home/louyujing/visualization/resnet18.py, line 40, in <module>, \n outputs = model(inputs)"
                    ],
                    "data": {}
                }
            }
        }
    },
    {
        "case_id": "2",
        "description": "测试获取未匹配节点信息",
        "input": "/data/plugin/graph_ascend/getNodeInfo?nodeInfo={\"nodeType\":\"NPU\",\"nodeName\":\"Module.fc.Linear.forward.0\"}&metaData={\"tag\":\"mock_compare_resnet_data\",\"microStep\":-1,\"run\":\"st_test_cases\"}",
        "expected": {
            "success": true,
            "data": {
                "npu": {
                    "id": "Module.fc.Linear.forward.0",
                    "node_type": 0,
                    "output_data": {
                        "Module.fc.Linear.forward.0.output.0": {
                            "type": "torch.Tensor",
                            "dtype": "torch.float32",
                            "shape": "[10, 10]",
                            "Max": "1.236255",
                            "Min": "-1.562365",
                            "Mean": "-0.12689",
                            "Norm": "5.357258",
                            "data_name": "-1"
                        }
                    },
                    "input_data": {
                        "Module.fc.Linear.forward.0.input.0": {
                            "type": "torch.Tensor",
                            "dtype": "torch.float32",
                            "shape": "[10, 512]",
                            "Max": "2.68325",
                            "Min": "0.0",
                            "Mean": "0.82681",
                            "Norm": "66.964317",
                            "data_name": "-1"
                        }
                    },
                    "upnode": "DefaultModel",
                    "subnodes": [],
                    "matched_node_link": [],
                    "suggestions": {},
                    "stack_info": [
                        "File /home/louyujing/miniconda3/lib/python3.9/site-packages/torchvision/models/resnet.py, line 280, in _forward_impl, \n x = self.fc(x)",
                        "File /home/louyujing/miniconda3/lib/python3.9/site-packages/torchvision/models/resnet.py, line 285, in forward, \n return self._forward_impl(x)",
                        "File /home/louyujing/miniconda3/lib/python3.9/site-packages/torch/nn/modules/module.py, line 1527, in _call_impl, \n return forward_call(*args, **kwargs)",
                        "File /home/louyujing/miniconda3/lib/python3.9/site-packages/torch/nn/modules/module.py, line 1518, in _wrapped_call_impl, \n return self._call_impl(*args, **kwargs)",
                        "File /home/louyujing/visualization/resnet18.py, line 40, in <module>, \n outputs = model(inputs)"
                    ],
                    "micro_step_id": 0,
                    "data": {}
                },
                "bench": null
            }
        }
    }
]