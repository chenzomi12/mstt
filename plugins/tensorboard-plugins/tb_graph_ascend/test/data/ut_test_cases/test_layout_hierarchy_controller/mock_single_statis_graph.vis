{
  "ToolTip": "{\"OneTwoThree\": \"\\u6570\"}",

  "node": {
        "AddOne_0": {
        "matched_node_link": [],
        "data": {
            "precision_index": 1
        },
        "id": "AddOne_0",
        "inputs": [],
        "input_data": {},
        "is_forward": true,
        "node_type": 0,
        "outputs": [],
        "output_data": {},
        "pair": "None",
        "subnodes": [
            "Test.add_0_withlonglonglonglonglonglonglonglongname.tt.ee",
            "add_5"
        ],
        "type": "AddOne",
        "upnode": "Test.maxpoolMaxPool2.maxpoolpo.tt.ee"
        },
        "AddOne_1": {
        "matched_node_link": [],
        "data": {
            "precision_index": 0.8
        },
        "id": "AddOne_1",
        "inputs": [],
        "input_data": {},
        "is_forward": true,
        "node_type": 9,
        "outputs": [],
        "output_data": {},
        "pair": "None",
        "subnodes": [
            "add_1",
            "add_4"
        ],
        "type": "AddOne",
        "upnode": "Test.maxpoolMaxPool2.maxpoolpo.tt.ee"
        },
        "Test.AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA.tt.ee": {
        "matched_node_link": [],
        "data": {
            "precision_index": 0
        },
        "id": "Test.AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA.tt.ee",
        "inputs": [],
        "input_data": {},
        "is_forward": true,
        "node_type": 0,
        "outputs": [],
        "output_data": {},
        "pair": "None",
        "subnodes": [
            "add_2"
        ],
        "type": "AddOne",
        "upnode": "AddThree_0",
        "micro_step_id": "3"
        },
        "Apis_Between_Modules.0": {
        "matched_node_link": [],
        "data": {},
        "id": "Apis_Between_Modules.0",
        "inputs": [],
        "input_data": {},
        "node_type": 9,
        "outputs": [],
        "output_data": {},
        "subnodes": [
            "Tensor.__api__0.forward",
            "Tensor.__api__1.forward",
            "Tensor.__api__2.forward",
            "Tensor.__api__3.forward",
            "Tensor.__api__4.forward",
            "Tensor.__api__5.forward",
            "Tensor.__api__6.forward",
            "Tensor.__api__7.forward",
            "Tensor.__api__8.forward",
            "Tensor.__api__9.forward",
            "api__10",
            "Tensor.__api__11.forward",
            "Tensor.__api__12.forward",
            "Tensor.__api__13.forward",
            "Tensor.__api__14.forward",
            "Tensor.__api__15.forward",
            "Tensor.__api__16.forward",
            "api__17",
            "Tensor.__api__18.forward",
            "Tensor.__api__19.forward",
            "Tensor.__api__20.forward",
            "Tensor.__apis__0.forward",
            "Tensor.__apis__1.forward",
            "Tensor.__apis__2.forward",
            "Tensor.__apis__3.forward",
            "Tensor.__apis__4.forward",
            "Tensor.__apis__5.forward",
            "Tensor.__apis__6.forward",
            "Tensor.__apis__7.forward",
            "Tensor.__apis__8.forward",
            "Tensor.__apis__9.forward",
            "apis__10",
            "Tensor.__apis__11.forward",
            "Tensor.__apis__12.forward",
            "Tensor.__apis__13.forward",
            "Tensor.__apis__14.forward",
            "Tensor.__apis__15.forward",
            "Tensor.__apis__16.forward",
            "apis__17",
            "Tensor.__apis__18.forward",
            "Tensor.__apis__19.forward",
            "Tensor.__apis__20.forward"
        ],
        "upnode": "AddThree_0",
        "micro_step_id": "3"
        },
        "Tensor.__api__0.forward": {
        "matched_node_link": [],
        "id": "Tensor.__api__0.forward",
        "inputs": [],
        "input_data": {},
        "node_type": 1,
        "outputs": [],
        "output_data": {},
        "subnodes": [],
        "upnode": "Apis_Between_Modules.0"
        },
        "Tensor.__api__1.forward": {
        "matched_node_link": [],
        "id": "Tensor.__api__1.forward",
        "inputs": [],
        "input_data": {},
        "node_type": 1,
        "outputs": [],
        "output_data": {},
        "subnodes": [],
        "upnode": "Apis_Between_Modules.0"
        },
        "Tensor.__api__2.forward": {
        "matched_node_link": [],
        "id": "Tensor.__api__2.forward",
        "inputs": [],
        "input_data": {},
        "node_type": 1,
        "outputs": [],
        "output_data": {},
        "subnodes": [],
        "upnode": "Apis_Between_Modules.0"
        },
        "Tensor.__api__3.forward": {
        "matched_node_link": [],
        "id": "Tensor.__api__3.forward",
        "inputs": [],
        "input_data": {},
        "node_type": 1,
        "outputs": [],
        "output_data": {},
        "subnodes": [],
        "upnode": "Apis_Between_Modules.0"
        },
        "AddThree_0": {
        "matched_node_link": [
            "B___AddThree_0"
        ],
        "data": {
            "precision_index": 0.5
        },
        "id": "AddThree_0",
        "inputs": [],
        "input_data": {},
        "is_forward": true,
        "node_type": 0,
        "outputs": [],
        "output_data": {},
        "pair": "None",
        "subnodes": [
            "arg0_1_0",
            "Apis_Between_Modules.0",
            "Test.maxpoolMaxPool2.maxpoolpo.tt.ee",
            "Test.AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA.tt.ee",
            "output_0"
        ],
        "type": "AddThree",
        "upnode": "None"
        },
        "Test.maxpoolMaxPool2.maxpoolpo.tt.ee": {
        "matched_node_link": [],
        "data": {
            "precision_status": false,
            "Host Self Duration(us)": 56.24,
            "Host Total Duration(us)": 56.24,
            "Device Self Duration(us)": 0,
            "Device Total Duration(us)": 0,
            "overflow_level": "medium"
        },
        "id": "Test.maxpoolMaxPool2.maxpoolpo.tt.ee",
        "inputs": [],
        "input_data": {
            "Test.maxpoolMaxPool2.maxpoolpo.tt.ee.input_arg.0": {
            "longlonglonglonglonglongName": "hah",
            "type": "torch.Tensorzhishihsihsaoidfhisjdflksjdflkjsklgjskldjfkls阿斯利康大姐夫克里斯丁剪发卡老大说发了跨境电商付了款大",
            "dtype": "torch.float32",
            "shape": "[32, 512, 2, 2]",
            "Max": "5348.2343242",
            "Min": "-2344.124124234",
            "Mean": "-51.23432654",
            "Norm": "355555.3406",
            "error_key": [
                "type",
                "shape"
            ]
            },
            "Test.maxpoolMaxPool2.maxpoolpo.tt.ee.kwrag_arg.1": {
            "type": "torch.Tensor",
            "dtype": "torch.float32",
            "shape": [
                64,
                256,
                2,
                2
            ],
            "Max": "5348.2343242",
            "Min": "-2344.124124234",
            "Mean": "-51.23432654",
            "Norm": "355555.3406"
            }
        },
        "is_forward": true,
        "node_type": 9,
        "outputs": [],
        "output_data": {
            "output.0": {
            "type": "torch.Tensor",
            "dtype": "torch.float32",
            "shape": [
                128,
                512,
                2,
                2
            ],
            "Max": "538.2343242",
            "Min": "-234.124124234",
            "Mean": "-510.23432654",
            "Norm": "3555.3406"
            },
            "output.1": {
            "type": "torch.Tensor",
            "dtype": "torch.float32",
            "shape": [
                16,
                256,
                2,
                2
            ],
            "Max": "5348.2343242",
            "Min": "-2344.124124234",
            "Mean": "-51.23432654",
            "Norm": "355555.3406"
            }
        },
        "pair": "None",
        "subnodes": [
            "AddOne_0",
            "AddOne_1"
        ],
        "suggestions": {
            "text": "test ptdbg工具 with longlong tenm tensldjta te alsejtka gaew jtljae tet jsdklfj.",
            "ptdbg工具": "https://gitee.com/ascend/att/tree/master/debug/accuracy_tools/ptdbg_ascend"
        },
        "stack_info": [
            "File /home/w3000/xxxx/subnodes/sdd/adad/srit-sda/artar/prased, line 136. om het, \n dada = rtens/sda.ddd(asdw)",
            "File /home/w3000/xxxx/subnodes/sdd/adad/srit-sda/artar/prased, line 136. om het, \n dada = rtens/sda.ddd(asdw)",
            "File /home/w3000/xxxx/subnodes/sdd/adad/srit-sda/artar/prased, line 136. om het, \n dada = rtens/sda.ddd(asdw)"
        ],
        "type": "AddTwo",
        "upnode": "AddThree_0",
        "micro_step_id": "0"
        },
        "Test.add_0_withlonglonglonglonglonglonglonglongname.tt.ee": {
        "matched_node_link": [
            "B___AddThree_0",
            "B___Test.maxpoolMaxPool2.maxpoolpo.tt.ee",
            "B___AddOne_0",
            "B___Test.add_0_withlonglonglonglonglonglonglonglongname.tt.ee"
        ],
        "data": {
            "precision_index": 0.35
        },
        "id": "Test.add_0_withlonglonglonglonglonglonglonglongname.tt.ee",
        "inputs": [],
        "input_data": {
            "input_arg.0": {
            "type": "torch.Tensor",
            "dtype": "torch.float32",
            "shape": [
                32,
                512,
                2,
                2
            ],
            "Max": "5348.2343242",
            "Min": "-2344.124124234",
            "Mean": "-51.23432654",
            "Norm": "355555.3406"
            },
            "input_arg.1": {
            "type": "torch.Tensor",
            "dtype": "torch.float32",
            "shape": [
                64,
                256,
                2,
                2
            ],
            "Max": "5348.2343242",
            "Min": "-2344.124124234",
            "Mean": "-51.23432654",
            "Norm": "355555.3406"
            },
            "input_arg.2": "None"
        },
        "is_forward": true,
        "node_type": 0,
        "outputs": [],
        "output_data": {
            "output.0": {
            "type": "torch.Tensor",
            "dtype": "torch.float32",
            "shape": [
                128,
                512,
                2,
                2
            ],
            "Max": "5348.2343242",
            "Min": "-2344.124124234",
            "Mean": "-51.23432654",
            "Norm": "355555.3406"
            },
            "output.1": {
            "type": "torch.Tensor",
            "dtype": "torch.float32",
            "shape": [
                16,
                256,
                2,
                2
            ],
            "Max": "5348.2343242",
            "Min": "-2344.124124234",
            "Mean": "-51.23432654",
            "Norm": "355555.3406"
            }
        },
        "pair": "None",
        "subnodes": [],
        "type": "addlongtingmelasidngkonklajelkjsakljgskadtest",
        "upnode": "AddOne_0"
        },
        "add_5": {
        "matched_node_link": [],
        "data": {
            "precision_status": true,
            "precision_index": 1,
            "md5 Compare Result": "Pass"
        },
        "id": "add_5",
        "inputs": [],
        "input_data": {},
        "is_forward": true,
        "node_type": 0,
        "outputs": [],
        "output_data": {},
        "pair": "None",
        "subnodes": [],
        "type": "add",
        "upnode": "AddOne_0"
        },
        "add_1": {
        "matched_node_link": [],
        "data": {
            "precision_status": false,
            "precision_index": 0,
            "md5 Compare Result": "Pass"
        },
        "id": "add_1",
        "inputs": [],
        "input_data": {},
        "is_forward": true,
        "node_type": 0,
        "outputs": [],
        "output_data": {},
        "pair": "None",
        "subnodes": [],
        "type": "add",
        "upnode": "AddOne_1"
        },
        "add_4": {
        "matched_node_link": [],
        "data": {},
        "id": "add_4",
        "inputs": [],
        "input_data": {},
        "is_forward": true,
        "node_type": 0,
        "outputs": [],
        "output_data": {},
        "pair": "None",
        "subnodes": [],
        "type": "add",
        "upnode": "AddOne_1"
        },
        "add_2": {
        "matched_node_link": [
            "add_2"
        ],
        "data": {
            "precision_index": 9475.908623767291
        },
        "id": "add_2",
        "inputs": [],
        "input_data": {
            "add_2.input_arg.0": {
            "longlonglonglonglonglongName": "hah",
            "type": "torch.Tensor",
            "dtype": "torch.float32",
            "shape": "[32, 512, 2, 2]",
            "Max": "6408.2343242",
            "Min": "-3134.124124234",
            "Mean": "-501.23432654",
            "Norm": "3555.3406",
            "error_key": [
                "type",
                "shape"
            ],
            "Max diff": 5860,
            "Min diff": -2900,
            "Mean diff": -496,
            "L2norm diff": -32000.000000000004,
            "MaxRelativeErr": "1068.886011%",
            "MinRelativeErr": "1238.659198%",
            "MeanRelativeErr": "9475.908624%",
            "NormRelativeErr": "90.000544%"
            },
            "add_2.kwrag_arg.1": {
            "type": "torch.Tensor",
            "dtype": "torch.float32",
            "shape": [
                64,
                256,
                2,
                2
            ],
            "Max": "5348.2343242",
            "Min": "-2344.124124234",
            "Mean": "-51.23432654",
            "Norm": "355555.3406",
            "Max diff": 0,
            "Min diff": 0,
            "Mean diff": 0,
            "L2norm diff": 0,
            "MaxRelativeErr": "0.000000%",
            "MinRelativeErr": "0.000000%",
            "MeanRelativeErr": "0.000000%",
            "NormRelativeErr": "0.000000%"
            }
        },
        "is_forward": true,
        "node_type": 0,
        "outputs": [],
        "output_data": {},
        "pair": "None",
        "subnodes": [],
        "type": "add",
        "upnode": "Test.AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA.tt.ee"
        },
        "arg0_1_0": {
        "matched_node_link": [],
        "data": {},
        "id": "arg0_1_0",
        "inputs": [],
        "input_data": {},
        "is_forward": true,
        "node_type": 0,
        "outputs": [],
        "output_data": {},
        "pair": "None",
        "subnodes": [],
        "type": "arg0_1",
        "upnode": "AddThree_0",
        "micro_step_id": "2",
        "suggestions": {
            "text": "test ptdbg工"
        },
        "stack_info": [
            "File /home/w3000/xxxx/subnodes/sdd/adad/srit-sda/artar/prased, line 136. om het, \n dada = rtens/sda.ddd(asdw)"
        ]
        },
        "output_0": {
        "matched_node_link": [],
        "data": {},
        "id": "output_0",
        "inputs": [],
        "input_data": {},
        "is_forward": true,
        "node_type": 0,
        "outputs": [],
        "output_data": {},
        "pair": "None",
        "subnodes": [],
        "type": "output",
        "upnode": "AddThree_0",
        "micro_step_id": "3"
        }
    },
  "root": "AddThree_0",
  "MicroSteps": 5,
  "task": "summary"
}
